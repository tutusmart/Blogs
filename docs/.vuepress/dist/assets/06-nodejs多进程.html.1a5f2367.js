import{_ as p,r as e,o,a as c,b as s,e as i,F as l,c as a,d as n}from"./app.1c29f384.js";const u={},k=a(`<h1 id="nodejs-\u591A\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#nodejs-\u591A\u8FDB\u7A0B" aria-hidden="true">#</a> nodejs \u591A\u8FDB\u7A0B</h1><h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>nodejs \u5982\u4F55\u5F00\u542F\u4E00\u4E2A\u8FDB\u7A0B\uFF0C\u8FDB\u7A0B\u4E4B\u95F4\u5982\u4F55\u901A\u8BAF</p><h2 id="\u8FDB\u7A0B-process-\u548C\u7EBF\u7A0B-thread" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u7A0B-process-\u548C\u7EBF\u7A0B-thread" aria-hidden="true">#</a> \u8FDB\u7A0B process \u548C\u7EBF\u7A0B thread</h2><p>\u8FDB\u7A0B\uFF0C\u662F\u64CD\u4F5C\u7CFB\u7EDF\u8FDB\u884C\u8D44\u6E90\u8C03\u5EA6\u548C\u5206\u914D\u7684\u57FA\u672C\u5355\u4F4D\uFF0C\u6BCF\u4E2A\u8FDB\u7A0B\u90FD\u62E5\u6709\u81EA\u5DF1\u72EC\u7ACB\u7684\u5185\u5B58\u533A\u57DF\uFF08\u53C2\u8003\u201C\u5806\u6808\u6A21\u578B\u201D\uFF09\u3002 \u4E00\u4E2A\u8FDB\u7A0B\u65E0\u6CD5\u76F4\u63A5\u8BBF\u95EE\u53E6\u4E00\u4E2A\u8FDB\u7A0B\u7684\u5185\u5B58\u6570\u636E\uFF0C\u9664\u975E\u901A\u8FC7\u5408\u6CD5\u7684\u8FDB\u7A0B\u901A\u8BAF\u3002</p><p>\u6267\u884C\u4E00\u4E2A nodejs \u6587\u4EF6\uFF0C\u5373\u5F00\u542F\u4E86\u4E00\u4E2A\u8FDB\u7A0B\uFF0C\u53EF\u4EE5\u901A\u8FC7 <code>process.pid</code> \u67E5\u770B\u8FDB\u7A0B id \u3002</p><p>\u7EBF\u7A0B\uFF0C\u662F\u64CD\u4F5C\u7CFB\u7EDF\u8FDB\u884C\u8FD0\u7B97\u8C03\u5EA6\u7684\u6700\u5C0F\u5355\u4F4D\uFF0C\u7EBF\u7A0B\u662F\u9644\u5C5E\u4E8E\u8FDB\u7A0B\u7684\u3002\u4E00\u4E2A\u8FDB\u7A0B\u53EF\u4EE5\u5305\u542B\u591A\u4E2A\u7EBF\u7A0B\uFF08\u81F3\u5C11\u4E00\u4E2A\uFF09\uFF0C\u591A\u7EBF\u7A0B\u4E4B\u95F4\u53EF\u5171\u7528\u8FDB\u7A0B\u7684\u5185\u5B58\u6570\u636E\u3002<br> \u5982\u64CD\u4F5C\u7CFB\u7EDF\u662F\u4E00\u4E2A\u5DE5\u5382\uFF0C\u8FDB\u7A0B\u5C31\u662F\u4E00\u4E2A\u8F66\u95F4\uFF0C\u7EBF\u7A0B\u5C31\u662F\u4E00\u4E2A\u4E00\u4E2A\u7684\u5DE5\u4EBA\u3002</p><p>JS \u662F\u5355\u7EBF\u7A0B\u7684\uFF0C\u5373\u6267\u884C JS \u65F6\u542F\u52A8\u4E00\u4E2A\u8FDB\u7A0B\uFF08\u5982 JS \u5F15\u64CE\uFF0Cnodejs \u7B49\uFF09\uFF0C\u7136\u540E\u5176\u4E2D\u518D\u5F00\u542F\u4E00\u4E2A\u7EBF\u7A0B\u6765\u6267\u884C\u3002<br> \u867D\u7136\u5355\u7EBF\u7A0B\uFF0CJS \u662F\u57FA\u4E8E\u4E8B\u4EF6\u9A71\u52A8\u7684\uFF0C\u5B83\u4E0D\u4F1A\u963B\u585E\u6267\u884C\uFF0C\u9002\u5408\u9AD8\u5E76\u53D1\u7684\u573A\u666F\u3002</p><h2 id="\u4E3A\u4F55\u9700\u8981\u591A\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4F55\u9700\u8981\u591A\u8FDB\u7A0B" aria-hidden="true">#</a> \u4E3A\u4F55\u9700\u8981\u591A\u8FDB\u7A0B</h2><p>\u73B0\u4EE3\u670D\u52A1\u5668\u90FD\u662F\u591A\u6838 CPU \uFF0C\u9002\u5408\u540C\u65F6\u5904\u7406\u591A\u8FDB\u7A0B\u3002\u5373\uFF0C\u4E00\u4E2A\u8FDB\u7A0B\u65E0\u6CD5\u5145\u5206\u5229\u7528 CPU \u6027\u80FD\uFF0C\u8FDB\u7A0B\u6570\u8981\u7B49\u4E8E CPU \u6838\u6570\u3002</p><p>\u670D\u52A1\u5668\u4E00\u822C\u5185\u5B58\u6BD4\u8F83\u5927\uFF0C\u4F46\u64CD\u4F5C\u7CFB\u7EDF\u5BF9\u4E8E\u4E00\u4E2A\u8FDB\u7A0B\u7684\u5185\u5B58\u5206\u914D\u662F\u6709\u4E0A\u9650\u7684\uFF082G\uFF09\uFF0C\u6240\u4EE5\u591A\u8FDB\u7A0B\u624D\u80FD\u5145\u5206\u5229\u7528\u670D\u52A1\u5668\u5185\u5B58\u3002</p><h2 id="nodejs-\u5F00\u542F\u591A\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#nodejs-\u5F00\u542F\u591A\u8FDB\u7A0B" aria-hidden="true">#</a> nodejs \u5F00\u542F\u591A\u8FDB\u7A0B</h2><p><code>child_process.fork</code> \u53EF\u5F00\u542F\u5B50\u8FDB\u7A0B\u6267\u884C\u5355\u72EC\u7684\u8BA1\u7B97\uFF08\u6E90\u7801\u53C2\u8003 process-fork.js\uFF09</p><ul><li><code>fork(&#39;xxx.js&#39;)</code> \u5F00\u542F\u4E00\u4E2A\u5B50\u8FDB\u7A0B</li><li>\u4F7F\u7528 <code>send</code> \u53D1\u9001\u4FE1\u606F\uFF0C\u4F7F\u7528 <code>on</code> \u63A5\u6536\u4FE1\u606F</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fork <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fork

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&#39;/get-sum&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E3B\u8FDB\u7A0B id&#39;</span><span class="token punctuation">,</span> process<span class="token punctuation">.</span>pid<span class="token punctuation">)</span>

        <span class="token comment">// \u5F00\u542F\u5B50\u8FDB\u7A0B</span>
        <span class="token keyword">const</span> computeProcess <span class="token operator">=</span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token string">&#39;./compute.js&#39;</span><span class="token punctuation">)</span>
        computeProcess<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F00\u59CB\u8BA1\u7B97&#39;</span><span class="token punctuation">)</span>

        computeProcess<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> data <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E3B\u8FDB\u7A0B\u63A5\u53D7\u5230\u7684\u4FE1\u606F\uFF1A&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
            res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;sum is &#39;</span> <span class="token operator">+</span> data<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

        computeProcess<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;\u5B50\u8FDB\u7A0B\u56E0\u62A5\u9519\u800C\u9000\u51FA&#39;</span><span class="token punctuation">)</span>
            computeProcess<span class="token punctuation">.</span><span class="token function">kill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;localhost: 3000&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cluster.fork</code> \u53EF\u9488\u5BF9\u5F53\u524D\u4EE3\u7801\uFF0C\u5F00\u542F\u591A\u4E2A\u8FDB\u7A0B\u6765\u6267\u884C\uFF08\u6E90\u7801\u53C2\u8003 cluster.js\uFF09</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> cpuCoreLength <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cpus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length
<span class="token keyword">const</span> cluster <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>cluster<span class="token punctuation">.</span>isMaster<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cpuCoreLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cluster<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5F00\u542F\u5B50\u8FDB\u7A0B</span>
    <span class="token punctuation">}</span>

    cluster<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;exit&#39;</span><span class="token punctuation">,</span> worker <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5B50\u8FDB\u7A0B\u9000\u51FA&#39;</span><span class="token punctuation">)</span>
        cluster<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u8FDB\u7A0B\u5B88\u62A4</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u591A\u4E2A\u5B50\u8FDB\u7A0B\u4F1A\u5171\u4EAB\u4E00\u4E2A TCP \u8FDE\u63A5\uFF0C\u63D0\u4F9B\u4E00\u4EFD\u7F51\u7EDC\u670D\u52A1</span>
    <span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;done&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>// \u5DE5\u4F5C\u4E2D PM2</p><h2 id="\u7B54\u6848" tabindex="-1"><a class="header-anchor" href="#\u7B54\u6848" aria-hidden="true">#</a> \u7B54\u6848</h2><ul><li>\u53EF\u4F7F\u7528 <code>child_process.fork</code> \u548C <code>cluster.fork</code> \u5F00\u542F\u5B50\u8FDB\u7A0B</li><li>\u4F7F\u7528 <code>send</code> <code>on</code> \u4F20\u9012\u6D88\u606F</li></ul><h2 id="\u6269\u5C55-\u4F7F\u7528-pm2" tabindex="-1"><a class="header-anchor" href="#\u6269\u5C55-\u4F7F\u7528-pm2" aria-hidden="true">#</a> \u6269\u5C55\uFF1A\u4F7F\u7528 PM2</h2>`,21),r=n("nodejs \u670D\u52A1\u5F00\u542F\u591A\u8FDB\u7A0B\u3001\u8FDB\u7A0B\u5B88\u62A4\uFF0C\u53EF\u4F7F\u7528 "),d={href:"https://www.npmjs.com/package/pm2",target:"_blank",rel:"noopener noreferrer"},v=n("pm2"),m=n(" \uFF0C\u4E0D\u9700\u8981\u81EA\u5DF1\u5199\u3002\u4EE3\u7801\u53C2\u8003 koa2-code"),b=a(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// logger</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5148\u6267\u884C\u4E0B\u4E00\u6B65 x-response-time \uFF0C\u6267\u884C\u5B8C\u518D\u7EE7\u7EED\u6267\u884C</span>
  <span class="token keyword">const</span> rt <span class="token operator">=</span> ctx<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;X-Response-Time&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ctx<span class="token punctuation">.</span>method<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ctx<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>rt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// x-response-time</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> start <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5148\u6267\u884C\u4E0B\u4E00\u6B65 response \uFF0C\u6267\u884C\u5B8C\u518D\u7EE7\u7EED\u6267\u884C</span>
  <span class="token keyword">const</span> ms <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;X-Response-Time&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ms<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// response</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> ctx <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5168\u5C40\u5B89\u88C5 pm2 <code>yarn global add pm2</code></li><li>\u589E\u52A0 pm2 \u914D\u7F6E\u6587\u4EF6</li><li>\u4FEE\u6539 package.json scripts</li></ul>`,2);function h(g,f){const t=e("ExternalLinkIcon");return o(),c(l,null,[k,s("p",null,[r,s("a",d,[v,i(t)]),m]),b],64)}var w=p(u,[["render",h],["__file","06-nodejs\u591A\u8FDB\u7A0B.html.vue"]]);export{w as default};
