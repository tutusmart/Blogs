import{_ as n,c as s}from"./app.1c29f384.js";var a="/../../assets/dom-tree.5eb9ba02.png";const t={},e=s('<h1 id="\u904D\u5386-dom-\u6811" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386-dom-\u6811" aria-hidden="true">#</a> \u904D\u5386 DOM \u6811</h1><h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u5199\u4E00\u4E2A\u51FD\u6570\u904D\u5386 DOM \u6811\uFF0C\u5206\u522B\u7528\u6DF1\u5EA6\u4F18\u5148\u548C\u5E7F\u5EA6\u4F18\u5148</p><p>PS\uFF1A\u6CE8\u610F\u56DE\u987E \u201CNode \u548C Element \u548C\u533A\u522B\u201D</p><h2 id="\u6DF1\u5EA6\u4F18\u5148-vs-\u5E7F\u5EA6\u4F18\u5148" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u5EA6\u4F18\u5148-vs-\u5E7F\u5EA6\u4F18\u5148" aria-hidden="true">#</a> \u6DF1\u5EA6\u4F18\u5148 vs \u5E7F\u5EA6\u4F18\u5148</h2><p><img src="'+a+`" alt=""></p><p>\u6DF1\u5EA6\u4F18\u5148\u7684\u7ED3\u679C <code>&lt;div&gt; &lt;p&gt; &quot;hello&quot; &lt;b&gt; &quot;world&quot; &lt;img&gt; \u6CE8\u91CA &lt;ul&gt; &lt;li&gt; &quot;a&quot; &lt;li&gt; &quot;b&quot;</code></p><p>\u5E7F\u5EA6\u4F18\u5148\u7684\u7ED3\u679C <code>&lt;div&gt; &lt;p&gt; &lt;img&gt; \u6CE8\u91CA &lt;ul&gt; &quot;hello&quot; &lt;b&gt; &lt;li&gt; &lt;li&gt; &quot;world&quot; &quot;a&quot; &quot;b&quot;</code></p><h2 id="\u6DF1\u5EA6\u4F18\u5148" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u5EA6\u4F18\u5148" aria-hidden="true">#</a> \u6DF1\u5EA6\u4F18\u5148</h2><p>\u4E00\u822C\u901A\u8FC7\u9012\u5F52\u5B9E\u73B0\uFF0C\u4EE3\u7801\u53C2\u8003 dom-traverse.ts</p><h2 id="\u5E7F\u5EA6\u4F18\u5148" tabindex="-1"><a class="header-anchor" href="#\u5E7F\u5EA6\u4F18\u5148" aria-hidden="true">#</a> \u5E7F\u5EA6\u4F18\u5148</h2><p>\u4E00\u822C\u901A\u8FC7\u961F\u5217\u5B9E\u73B0\uFF0C\u4EE3\u7801\u53C2\u8003 dom-traverse.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u89E3\u7B54" tabindex="-1"><a class="header-anchor" href="#\u89E3\u7B54" aria-hidden="true">#</a> \u89E3\u7B54</h2><ul><li>\u6DF1\u5EA6\u4F18\u5148\uFF0C\u9012\u5F52</li><li>\u5E7F\u5EA6\u4F18\u5148\uFF0C\u961F\u5217</li></ul><h2 id="\u8FDE\u73AF\u95EE-\u6DF1\u5EA6\u4F18\u5148\u53EF\u4EE5\u4E0D\u7528\u9012\u5F52\u5417" tabindex="-1"><a class="header-anchor" href="#\u8FDE\u73AF\u95EE-\u6DF1\u5EA6\u4F18\u5148\u53EF\u4EE5\u4E0D\u7528\u9012\u5F52\u5417" aria-hidden="true">#</a> \u8FDE\u73AF\u95EE\uFF1A\u6DF1\u5EA6\u4F18\u5148\u53EF\u4EE5\u4E0D\u7528\u9012\u5F52\u5417\uFF1F</h2><p>\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\uFF0C\u53EF\u4EE5\u4F7F\u7528\u6808\u4EE3\u66FF\u9012\u5F52\uFF0C\u9012\u5F52\u672C\u8D28\u4E0A\u5C31\u662F\u6808\u3002\u4EE3\u7801\u53C2\u8003 dom-traverse.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span> \u904D\u5386 DOM tree
 * <span class="token keyword">@author</span> \u53CC\u8D8A\u8001\u5E08
 */</span>

<span class="token doc-comment comment">/**
 * \u8BBF\u95EE\u8282\u70B9
 * <span class="token keyword">@param</span> <span class="token parameter">n</span> node
 */</span>
<span class="token keyword">function</span> <span class="token function">visitNode</span><span class="token punctuation">(</span>n<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token keyword">instanceof</span> <span class="token class-name">Comment</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6CE8\u91CA</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;Comment node ---&#39;</span><span class="token punctuation">,</span> n<span class="token punctuation">.</span>textContent<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token keyword">instanceof</span> <span class="token class-name">Text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6587\u672C</span>
        <span class="token keyword">const</span> t <span class="token operator">=</span> n<span class="token punctuation">.</span>textContent<span class="token operator">?.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;Text node ---&#39;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token keyword">instanceof</span> <span class="token class-name">HTMLElement</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// element</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;Element node ---&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>n<span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u6DF1\u5EA6\u4F18\u5148\u904D\u5386
 * <span class="token keyword">@param</span> <span class="token parameter">root</span> dom node
 */</span>
<span class="token keyword">function</span> <span class="token function">depthFirstTraverse1</span><span class="token punctuation">(</span>root<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">visitNode</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>

    <span class="token keyword">const</span> childNodes <span class="token operator">=</span> root<span class="token punctuation">.</span>childNodes <span class="token comment">// .childNodes \u548C .children \u4E0D\u4E00\u6837</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>childNodes<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        childNodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>child <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">depthFirstTraverse1</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span> <span class="token comment">// \u9012\u5F52</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u6DF1\u5EA6\u4F18\u5148\u904D\u5386
 * <span class="token keyword">@param</span> <span class="token parameter">root</span> dom node
 */</span>
 <span class="token keyword">function</span> <span class="token function">depthFirstTraverse2</span><span class="token punctuation">(</span>root<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">const</span> stack<span class="token operator">:</span> Node<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

     <span class="token comment">// \u6839\u8282\u70B9\u538B\u6808</span>
     stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>

     <span class="token keyword">while</span> <span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">const</span> curNode <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u51FA\u6808</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>curNode <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">break</span>

         <span class="token function">visitNode</span><span class="token punctuation">(</span>curNode<span class="token punctuation">)</span>

         <span class="token comment">// \u5B50\u8282\u70B9\u538B\u6808</span>
         <span class="token keyword">const</span> childNodes <span class="token operator">=</span> curNode<span class="token punctuation">.</span>childNodes
         <span class="token keyword">if</span> <span class="token punctuation">(</span>childNodes<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token comment">// reverse \u53CD\u987A\u5E8F\u538B\u6808</span>
             <span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>childNodes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>child <span class="token operator">=&gt;</span> stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u5E7F\u5EA6\u4F18\u5148\u904D\u5386
 * <span class="token keyword">@param</span> <span class="token parameter">root</span> dom node
 */</span>
<span class="token keyword">function</span> <span class="token function">breadthFirstTraverse</span><span class="token punctuation">(</span>root<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> queue<span class="token operator">:</span> Node<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u6570\u7EC4 vs \u94FE\u8868</span>

    <span class="token comment">// \u6839\u8282\u70B9\u5165\u961F\u5217</span>
    queue<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> curNode <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>curNode <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">break</span>

        <span class="token function">visitNode</span><span class="token punctuation">(</span>curNode<span class="token punctuation">)</span>

        <span class="token comment">// \u5B50\u8282\u70B9\u5165\u961F</span>
        <span class="token keyword">const</span> childNodes <span class="token operator">=</span> curNode<span class="token punctuation">.</span>childNodes
        <span class="token keyword">if</span> <span class="token punctuation">(</span>childNodes<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            childNodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>child <span class="token operator">=&gt;</span> queue<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;box&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>box <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;box is null&#39;</span><span class="token punctuation">)</span>
<span class="token function">depthFirstTraverse2</span><span class="token punctuation">(</span>box<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9012\u5F52\u548C\u975E\u9012\u5F52\u54EA\u4E2A\u66F4\u597D\uFF1F</p><ul><li>\u9012\u5F52\u903B\u8F91\u66F4\u52A0\u6E05\u6670\uFF0C\u4F46\u5BB9\u6613\u51FA\u73B0 <code>stack overflow</code> \u9519\u8BEF\uFF08\u53EF\u4F7F\u7528<code>\u5C3E\u9012\u5F52</code>\uFF0C\u7F16\u8BD1\u5668\u6709\u4F18\u5316\uFF09</li><li>\u975E\u9012\u5F52\u6548\u7387\u66F4\u9AD8\uFF0C\u4F46\u4F7F\u7528\u6808\uFF0C\u903B\u8F91\u7A0D\u5FAE\u590D\u6742\u4E00\u4E9B</li></ul>`,20);function p(o,c){return e}var l=n(t,[["render",p],["__file","05-\u904D\u5386DOM\u6811.html.vue"]]);export{l as default};
