import{_ as n,c as s}from"./app.1c29f384.js";const a={},p=s(`<h1 id="for-in-\u548C-for-of-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#for-in-\u548C-for-of-\u7684\u533A\u522B" aria-hidden="true">#</a> for...in \u548C for...of \u7684\u533A\u522B</h1><h1 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h1><p>for...in \u548C for...of \u7684\u533A\u522B</p><h2 id="key-\u548C-value" tabindex="-1"><a class="header-anchor" href="#key-\u548C-value" aria-hidden="true">#</a> key \u548C value</h2><p>for...in \u904D\u5386 key , for...of \u904D\u5386 value</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;abc&#39;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> s <span class="token keyword">of</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> argument <span class="token keyword">of</span> arguments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>argument<span class="token punctuation">)</span> <span class="token comment">// for...of \u53EF\u4EE5\u83B7\u53D6 value \uFF0C\u800C for...in \u83B7\u53D6 key</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> pList <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> p <span class="token keyword">of</span> pList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token comment">// for...of \u53EF\u4EE5\u83B7\u53D6 value \uFF0C\u800C for...in \u83B7\u53D6 key</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u904D\u5386\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u5BF9\u8C61" aria-hidden="true">#</a> \u904D\u5386\u5BF9\u8C61</h2><p>for...in \u53EF\u4EE5\u904D\u5386\u5BF9\u8C61\uFF0Cfor...of \u4E0D\u53EF\u4EE5</p><h2 id="\u904D\u5386-map-set" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386-map-set" aria-hidden="true">#</a> \u904D\u5386 Map/Set</h2><p>for...of \u53EF\u4EE5\u904D\u5386 Map/Set \uFF0Cfor...in \u4E0D\u53EF\u4EE5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> set1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n <span class="token keyword">of</span> set1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> map1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;z&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n <span class="token keyword">of</span> map1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u904D\u5386-generator" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386-generator" aria-hidden="true">#</a> \u904D\u5386 generator</h2><p>for...of \u53EF\u904D\u5386 generator \uFF0Cfor...in \u4E0D\u53EF\u4EE5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">10</span>
  <span class="token keyword">yield</span> <span class="token number">20</span>
  <span class="token keyword">yield</span> <span class="token number">30</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> o <span class="token keyword">of</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5BF9\u8C61\u7684\u53EF\u679A\u4E3E\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u7684\u53EF\u679A\u4E3E\u5C5E\u6027" aria-hidden="true">#</a> \u5BF9\u8C61\u7684\u53EF\u679A\u4E3E\u5C5E\u6027</h2><p>for...in \u904D\u5386\u4E00\u4E2A\u5BF9\u8C61\u7684\u53EF\u679A\u4E3E\u5C5E\u6027\u3002</p><p>\u4F7F\u7528 <code>Object.getOwnPropertyDescriptors(obj)</code> \u53EF\u4EE5\u83B7\u53D6\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\u63CF\u8FF0\uFF0C\u770B <code> enumerable: true</code> \u6765\u5224\u65AD\u8BE5\u5C5E\u6027\u662F\u5426\u53EF\u679A\u4E3E\u3002</p><p>\u5BF9\u8C61\uFF0C\u6570\u7EC4\uFF0C\u5B57\u7B26\u4F20</p><h2 id="\u53EF\u8FED\u4EE3\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u53EF\u8FED\u4EE3\u5BF9\u8C61" aria-hidden="true">#</a> \u53EF\u8FED\u4EE3\u5BF9\u8C61</h2><p>for...of \u904D\u5386\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u3002<br> \u5176\u5B9E\u5C31\u662F\u8FED\u4EE3\u5668\u6A21\u5F0F\uFF0C\u901A\u8FC7\u4E00\u4E2A <code>next</code> \u65B9\u6CD5\u8FD4\u56DE\u4E0B\u4E00\u4E2A\u5143\u7D20\u3002</p><p>\u8BE5\u5BF9\u8C61\u8981\u5B9E\u73B0\u4E00\u4E2A <code>[Symbol.iterator]</code> \u65B9\u6CD5\uFF0C\u5176\u4E2D\u8FD4\u56DE\u4E00\u4E2A <code>next</code> \u51FD\u6570\uFF0C\u7528\u4E8E\u8FD4\u56DE\u4E0B\u4E00\u4E2A value\uFF08\u4E0D\u662F key\uFF09\u3002<br> \u53EF\u4EE5\u6267\u884C <code>arr[Symbol.iterator]()</code> \u770B\u4E00\u4E0B\u3002</p><p>JS \u4E2D\u5185\u7F6E\u8FED\u4EE3\u5668\u7684\u7C7B\u578B\u6709 <code>String</code> <code>Array</code> <code>arguments</code> <code>NodeList</code> <code>Map</code> <code>Set</code> <code>generator</code> \u7B49\u3002</p><h2 id="\u7B54\u6848" tabindex="-1"><a class="header-anchor" href="#\u7B54\u6848" aria-hidden="true">#</a> \u7B54\u6848</h2><ul><li>for...in \u904D\u5386\u4E00\u4E2A\u5BF9\u8C61\u7684\u53EF\u679A\u4E3E\u5C5E\u6027\uFF0C\u5982\u5BF9\u8C61\u3001\u6570\u7EC4\u3001\u5B57\u7B26\u4E32\u3002\u9488\u5BF9\u5C5E\u6027\uFF0C\u6240\u4EE5\u83B7\u5F97 key</li><li>for...of \u904D\u5386\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u5982\u6570\u7EC4\u3001\u5B57\u7B26\u4E32\u3001Map/Set \u3002\u9488\u5BF9\u4E00\u4E2A\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u6240\u4EE5\u83B7\u5F97 value</li></ul><h2 id="\u5212\u91CD\u70B9" tabindex="-1"><a class="header-anchor" href="#\u5212\u91CD\u70B9" aria-hidden="true">#</a> \u5212\u91CD\u70B9</h2><p>\u201C\u679A\u4E3E\u201D \u201C\u8FED\u4EE3\u201D \u90FD\u662F\u8BA1\u7B97\u673A\u8BED\u8A00\u7684\u4E00\u4E9B\u57FA\u7840\u672F\u8BED\uFF0C\u76EE\u524D\u641E\u4E0D\u61C2\u4E5F\u6CA1\u5173\u7CFB\u3002<br> \u4F46\u8BF7\u4E00\u5B9A\u8BB0\u4F4F for...of \u548C for...in \u7684\u4E0D\u540C\u8868\u73B0\u3002</p><h2 id="\u8FDE\u73AF\u95EE-for-await-of" tabindex="-1"><a class="header-anchor" href="#\u8FDE\u73AF\u95EE-for-await-of" aria-hidden="true">#</a> \u8FDE\u73AF\u95EE\uFF1Afor await...of</h2><p>\u7528\u4E8E\u904D\u5386\u5F02\u6B65\u8BF7\u6C42\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u50CF\u5B9A\u4E49\u4E00\u4E2A\u521B\u5EFA promise \u7684\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">createTimeoutPromise</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4F60\u660E\u786E\u77E5\u9053\u6709\u51E0\u4E2A promise \u5BF9\u8C61\uFF0C\u90A3\u76F4\u63A5\u5904\u7406\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token function">createTimeoutPromise</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token function">createTimeoutPromise</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> v1 <span class="token operator">=</span> <span class="token keyword">await</span> p1
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>
    <span class="token keyword">const</span> v2 <span class="token operator">=</span> <span class="token keyword">await</span> p2
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4F60\u6709\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u91CC\u9762\u6709 N \u4E2A promise \u5BF9\u8C61\uFF0C\u4F60\u53EF\u4EE5\u8FD9\u6837\u5904\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token function">createTimeoutPromise</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">createTimeoutPromise</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span>

    <span class="token comment">// \u7B2C\u4E00\uFF0C\u4F7F\u7528 Promise.all \u6267\u884C</span>
    Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// \u7B2C\u4E8C\uFF0C\u4F7F\u7528 for await ... of \u904D\u5386\u6267\u884C</span>
    <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">let</span> p <span class="token keyword">of</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6CE8\u610F\uFF0C\u5982\u679C\u7528 for...of \u53EA\u80FD\u904D\u5386\u51FA\u5404\u4E2A promise \u5BF9\u8C61\uFF0C\u800C\u4E0D\u80FD\u89E6\u53D1 await \u6267\u884C</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u3010\u6CE8\u610F\u3011\u5982\u679C\u4F60\u60F3\u987A\u5E8F\u6267\u884C\uFF0C\u53EA\u80FD\u5EF6\u8FDF\u521B\u5EFA promise \u5BF9\u8C61\uFF0C\u800C\u4E0D\u80FD\u53CA\u65E9\u521B\u5EFA\u3002<br> \u5373\uFF0C\u4F60\u521B\u5EFA\u4E86 promise \u5BF9\u8C61\uFF0C\u5B83\u5C31\u7ACB\u523B\u5F00\u59CB\u6267\u884C\u903B\u8F91\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> v1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createTimeoutPromise</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>
    <span class="token keyword">const</span> v2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createTimeoutPromise</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> v <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createTimeoutPromise</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;v&#39;</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36);function e(t,o){return p}var i=n(a,[["render",e],["__file","06-for-in\u548Cfor-of\u7684\u533A\u522B.html.vue"]]);export{i as default};
