import{_ as n,c as s}from"./app.1c29f384.js";const a={},e=s(`<h1 id="\u7C7B\u578B\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u5224\u65AD" aria-hidden="true">#</a> \u7C7B\u578B\u5224\u65AD</h1><h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u5B9E\u73B0\u4E00\u4E2A <code>getType</code> \u51FD\u6570\uFF0C\u4F20\u5165\u4E00\u4E2A\u53D8\u91CF\uFF0C\u80FD\u51C6\u786E\u7684\u83B7\u53D6\u5B83\u7684\u7C7B\u578B\u3002 \u5982 <code>number</code> <code>string</code> <code>function</code> <code>object</code> <code>array</code> <code>map</code> <code>regexp</code> \u7B49\u3002</p><h2 id="\u7C7B\u578B\u5224\u65AD-1" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u5224\u65AD-1" aria-hidden="true">#</a> \u7C7B\u578B\u5224\u65AD</h2><p>\u5E38\u89C4\u7684\u7C7B\u578B\u5224\u65AD\u4E00\u822C\u7528 <code>typeof</code> \u548C <code>instanceof</code> \uFF0C\u4F46\u8FD9\u4FE9\u4E5F\u6709\u4E00\u4E9B\u7F3A\u70B9</p><ul><li><code>typeof</code> \u65E0\u6CD5\u7EE7\u7EED\u533A\u5206 <code>object</code> \u7C7B\u578B</li><li><code>instanceof</code> \u9700\u8981\u77E5\u9053\u6784\u9020\u51FD\u6570\uFF0C\u5373\u9700\u8981\u4E24\u4E2A\u8F93\u5165</li></ul><h2 id="\u679A\u4E3E\u4E0D\u662F\u597D\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u679A\u4E3E\u4E0D\u662F\u597D\u65B9\u6CD5" aria-hidden="true">#</a> \u679A\u4E3E\u4E0D\u662F\u597D\u65B9\u6CD5</h2><p>\u4F60\u53EF\u80FD\u89C9\u5F97 <code>typeof</code> \u548C <code>instanceof</code> \u7ED3\u5408\u8D77\u6765\u53EF\u4EE5\u5224\u65AD\uFF0C\u679A\u4E3E\u6240\u6709\u7684\u7C7B\u578B\u3002<br> \u8FD9\u5E76\u4E0D\u662F\u4E00\u4E2A\u597D\u65B9\u6CD5\uFF0C\u56E0\u4E3A<strong>\u624B\u52A8\u679A\u4E3E\u662F\u4E0D\u9760\u8C31\u7684</strong>\uFF0C\u4E0D\u5177\u5907\u5B8C\u6574\u6027\u3002<br> \u7B2C\u4E00\uFF0C\u4F60\u6709\u53EF\u80FD\u5FFD\u7565\u67D0\u4E9B\u7C7B\u578B\uFF0C\u5982\uFF1B\u7B2C\u4E8C\uFF0CES \u6709\u4F1A\u7EE7\u7EED\u589E\u52A0\u65B0\u7684\u7C7B\u578B\uFF0C\u5982 <code>Symbol</code> <code>BigInt</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">getType</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;array&#39;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>x instance <span class="token keyword">of</span> Map<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;map&#39;</span>
        <span class="token comment">// \u7EE7\u7EED\u679A\u4E3E...</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> x
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F7F\u7528-object-prototype-tostring" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-object-prototype-tostring" aria-hidden="true">#</a> \u4F7F\u7528 <code>Object.prototype.toString</code></h2><p>\u6CE8\u610F\uFF0C\u5FC5\u987B\u7528 <code>Object.prototype.toString</code> \uFF0C\u4E0D\u53EF\u4EE5\u76F4\u63A5\u7528 <code>toString</code>\u3002\u540E\u8005\u53EF\u80FD\u662F\u5B50\u7C7B\u91CD\u5199\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &#39;1,2&#39; \uFF08 \u8FD9\u6837\u4F7F\u7528\u7684\u5176\u5B9E\u662F Array.prototype.toString \uFF09</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// &#39;[object Array]&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u53C2\u8003 get-type.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span> \u83B7\u53D6\u6570\u636E\u7C7B\u578B
 * <span class="token keyword">@author</span> \u53CC\u8D8A\u8001\u5E08
 */</span>

<span class="token doc-comment comment">/**
 * \u83B7\u53D6\u8BE6\u7EC6\u7684\u6570\u636E\u7C7B\u578B
 * <span class="token keyword">@param</span> <span class="token parameter">x</span> x
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getType</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> originType <span class="token operator">=</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment">// &#39;[object String]&#39;</span>
    <span class="token keyword">const</span> spaceIndex <span class="token operator">=</span> originType<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> type <span class="token operator">=</span> originType<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>spaceIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// &#39;String&#39;</span>
    <span class="token keyword">return</span> type<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &#39;string&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// // \u529F\u80FD\u6D4B\u8BD5</span>
<span class="token comment">// console.info( getType(null) ) // &#39;null&#39;</span>
<span class="token comment">// console.info( getType(undefined) )</span>
<span class="token comment">// console.info( getType(100) )</span>
<span class="token comment">// console.info( getType(&#39;abc&#39;) )</span>
<span class="token comment">// console.info( getType(true) )</span>
<span class="token comment">// console.info( getType(Symbol()) )</span>
<span class="token comment">// console.info( getType({}) )</span>
<span class="token comment">// console.info( getType([]) )</span>
<span class="token comment">// console.info( getType(() =&gt; {}) )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function t(o,p){return e}var i=n(a,[["render",t],["__file","03-\u7C7B\u578B\u5224\u65AD.html.vue"]]);export{i as default};
