import{_ as n,c as s}from"./app.1c29f384.js";const a={},t=s(`<h1 id="\u624B\u5199-eventbus" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199-eventbus" aria-hidden="true">#</a> \u624B\u5199 EventBus</h1><p>Bus \u4E0D\u662F\u201C\u8F66\u201D\uFF0C\u800C\u662F\u201C\u603B\u7EBF\u201D</p><h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u8BF7\u624B\u5199 EventBus \u81EA\u5B9A\u4E49\u4E8B\u4EF6\uFF0C\u5B9E\u73B0 <code>no</code> <code>once</code> <code>emit</code> \u548C <code>off</code></p><h2 id="eventbus-\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#eventbus-\u529F\u80FD" aria-hidden="true">#</a> EventBus \u529F\u80FD</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventBus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fn1&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fn2&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fn3</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fn3&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">}</span>

event<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> fn1<span class="token punctuation">)</span>
event<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> fn2<span class="token punctuation">)</span>
event<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> fn3<span class="token punctuation">)</span>
event<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;xxxxxx&#39;</span><span class="token punctuation">,</span> fn3<span class="token punctuation">)</span>

event<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token comment">// \u89E6\u53D1 fn1 fn2 fn3</span>

event<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> fn1<span class="token punctuation">)</span>

event<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token comment">// \u89E6\u53D1 fn2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h2><ul><li><code>class</code> \u7ED3\u6784</li><li>\u6CE8\u610F\u533A\u5206 <code>on</code> \u548C <code>off</code></li></ul><p>\u4EE3\u7801\u53C2\u8003 event-bus.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span> Event Bus
 * <span class="token keyword">@author</span> \u53CC\u8D8A\u8001\u5E08
 */</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">EventBus</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * <span class="token punctuation">{</span>
     *    &#39;key1&#39;: [
     *        <span class="token punctuation">{</span> fn: fn1, isOnce: false <span class="token punctuation">}</span>,
     *        <span class="token punctuation">{</span> fn: fn2, isOnce: false <span class="token punctuation">}</span>,
     *        <span class="token punctuation">{</span> fn: fn3, isOnce: true <span class="token punctuation">}</span>,
     *    ]
     *    &#39;key2&#39;: [] // \u6709\u5E8F
     *    &#39;key3&#39;: []
     * <span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">private</span> events<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>fn<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">;</span> isOnce<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
    <span class="token punctuation">}</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>events <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">on</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> fn<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">,</span> isOnce<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> events <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>events
        <span class="token keyword">if</span> <span class="token punctuation">(</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            events<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u521D\u59CB\u5316 key \u7684 fn \u6570\u7EC4</span>
        <span class="token punctuation">}</span>
        events<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> fn<span class="token punctuation">,</span> isOnce <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">once</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> fn<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">off</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> fn<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u89E3\u7ED1\u6240\u6709 type \u7684\u51FD\u6570</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u89E3\u7ED1\u5355\u4E2A fn</span>
            <span class="token keyword">const</span> fnList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>fnList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> fnList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>fn <span class="token operator">!==</span> fn<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">emit</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> fnList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fnList <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

        <span class="token comment">// \u6CE8\u610F</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> fnList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span> fn<span class="token punctuation">,</span> isOnce <span class="token punctuation">}</span> <span class="token operator">=</span> item
            <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>

            <span class="token comment">// once \u6267\u884C\u4E00\u6B21\u5C31\u8981\u88AB\u8FC7\u6EE4\u6389</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isOnce<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// const e = new EventBus()</span>

<span class="token comment">// function fn1(a: any, b: any) { console.log(&#39;fn1&#39;, a, b) }</span>
<span class="token comment">// function fn2(a: any, b: any) { console.log(&#39;fn2&#39;, a, b) }</span>
<span class="token comment">// function fn3(a: any, b: any) { console.log(&#39;fn3&#39;, a, b) }</span>

<span class="token comment">// e.on(&#39;key1&#39;, fn1)</span>
<span class="token comment">// e.on(&#39;key1&#39;, fn2)</span>
<span class="token comment">// e.once(&#39;key1&#39;, fn3)</span>
<span class="token comment">// e.on(&#39;xxxxxx&#39;, fn3)</span>

<span class="token comment">// e.emit(&#39;key1&#39;, 10, 20) // \u89E6\u53D1 fn1 fn2 fn3</span>

<span class="token comment">// e.off(&#39;key1&#39;, fn1)</span>

<span class="token comment">// e.emit(&#39;key1&#39;, 100, 200) // \u89E6\u53D1 fn2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8FDE\u73AF\u95EE-eventbus-\u91CC\u7684\u6570\u7EC4\u53EF\u4EE5\u6362\u6210-set-\u5417" tabindex="-1"><a class="header-anchor" href="#\u8FDE\u73AF\u95EE-eventbus-\u91CC\u7684\u6570\u7EC4\u53EF\u4EE5\u6362\u6210-set-\u5417" aria-hidden="true">#</a> \u8FDE\u73AF\u95EE\uFF1AEventBus \u91CC\u7684\u6570\u7EC4\u53EF\u4EE5\u6362\u6210 Set \u5417\uFF1F</h2><p>\u6570\u7EC4\u548C Set \u6BD4\u8F83 \uFF08\u9664\u4E86\u8BED\u6CD5 API\uFF09</p><ul><li>\u6570\u7EC4\uFF0C\u6709\u5E8F\u7ED3\u6784\uFF0C\u67E5\u627E\u3001\u4E2D\u95F4\u63D2\u5165\u3001\u4E2D\u95F4\u5220\u9664\u6BD4\u8F83\u6162</li><li>Set \u4E0D\u53EF\u6392\u5E8F\u7684\uFF0C\u63D2\u5165\u548C\u5220\u9664\u90FD\u5F88\u5FEB</li></ul><p>Set \u521D\u59CB\u5316\u6216\u8005 <code>add</code> \u65F6\u662F\u4E00\u4E2A\u6709\u5E8F\u7ED3\u6784\uFF0C\u4F46\u5B83\u65E0\u6CD5\u518D\u6B21\u6392\u5E8F\uFF0C\u6CA1\u6709 <code>index</code> \u4E5F\u6CA1\u6709 <code>sort</code> \u7B49 API</p><p>\u9A8C\u8BC1</p><ul><li>\u751F\u6210\u4E00\u4E2A\u5927\u6570\u7EC4\uFF0C\u9A8C\u8BC1 <code>push</code> <code>unshift</code> <code>includes</code> <code>splice</code></li><li>\u751F\u6210\u4E00\u4E2A\u5927 Set \uFF0C\u9A8C\u8BC1 <code>add</code> <code>delete</code> <code>has</code></li></ul><p>\u7B54\u6848\uFF1A\u4E0D\u53EF\u4EE5\uFF0CSet \u662F\u4E0D\u53EF\u6392\u5E8F\u7684\uFF0C\u5982\u518D\u589E\u52A0\u4E00\u4E9B\u201C\u6743\u91CD\u201D\u4E4B\u7C7B\u7684\u9700\u6C42\uFF0C\u5C06\u4E0D\u597D\u5B9E\u73B0\u3002</p><h2 id="map-\u548C-object" tabindex="-1"><a class="header-anchor" href="#map-\u548C-object" aria-hidden="true">#</a> Map \u548C Object</h2><p>Object \u662F\u65E0\u5E8F\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> data1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-property property">&#39;1&#39;</span><span class="token operator">:</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;2&#39;</span><span class="token operator">:</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;3&#39;</span><span class="token operator">:</span><span class="token string">&#39;ccc&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;\u6D4B\u8BD5&#39;</span><span class="token operator">:</span><span class="token string">&#39;000&#39;</span><span class="token punctuation">}</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span> <span class="token comment">// [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;\u6D4B\u8BD5&quot;]</span>
<span class="token keyword">const</span> data2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-property property">&#39;\u6D4B\u8BD5&#39;</span><span class="token operator">:</span><span class="token string">&#39;000&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;1&#39;</span><span class="token operator">:</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;3&#39;</span><span class="token operator">:</span><span class="token string">&#39;ccc&#39;</span><span class="token punctuation">,</span><span class="token string-property property">&#39;2&#39;</span><span class="token operator">:</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;\u6D4B\u8BD5&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Map \u662F\u6709\u5E8F\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> m1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;aaa&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bbb&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ccc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;\u6D4B\u8BD5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;000&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
m1<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> m2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">&#39;\u6D4B\u8BD5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;000&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;aaa&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ccc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bbb&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
m2<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0C<strong>Map \u867D\u7136\u662F\u6709\u5E8F\u7684\uFF0C\u4F46\u5B83\u7684 <code>get</code> <code>set</code> <code>delete</code> \u901F\u5EA6\u975E\u5E38\u5FEB</strong>\uFF0C\u548C Object \u6548\u7387\u4E00\u6837\u3002\u5B83\u662F\u88AB\u4F18\u5316\u8FC7\u7684\u6709\u5E8F\u7ED3\u6784\u3002</p>`,23);function p(e,o){return t}var i=n(a,[["render",p],["__file","10-\u624B\u5199event-bus.html.vue"]]);export{i as default};
